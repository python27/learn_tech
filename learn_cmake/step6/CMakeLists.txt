CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(Tutorial)

SET (Tutorial_VERSION_MAJOR 1)
SET (Tutorial_VERSION_MINOR 0)

INCLUDE(${CMAKE_ROOT}/Modules/CheckFunctionExists.cmake)
check_function_exists(log HAVE_LOG)
check_function_exists(exp HAVE_EXP)

option(USE_MYMATH "Use tutorial provided math func" on)

CONFIGURE_FILE(
    "${PROJECT_SOURCE_DIR}/TutorialConfig.h.in"
    "${PROJECT_BINARY_DIR}/TutorialConfig.h"
    )

INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}")

if (USE_MYMATH)
    INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/MathFunctions")
    ADD_SUBDIRECTORY(MathFunctions)
    SET (EXTRA_LIBS ${EXTRA_LIBS} MathFunctions)
endif (USE_MYMATH)

ADD_EXECUTABLE(Tutorial tutorial.cxx)
TARGET_LINK_LIBRARIES(Tutorial ${EXTRA_LIBS})

INSTALL (TARGETS Tutorial DESTINATION bin)
INSTALL (FILES "${PROJECT_BINARY_DIR}/TutorialConfig.h" DESTINATION include)

ENABLE_TESTING()
ADD_TEST(TutorialRuns Tutorial 25)

ADD_TEST(TutorialComp25 Tutorial 25)
SET_TESTS_PROPERTIES(TutorialComp25 PROPERTIES PASS_REGULAR_EXPRESSION "25 is 5")

ADD_TEST(TutorialNegative Tutorial -25)
SET_TESTS_PROPERTIES(TutorialNegative PROPERTIES PASS_REGULAR_EXPRESSION "-25 is 0")

ADD_TEST(TutorialSmall Tutorial 0.0001)
SET_TESTS_PROPERTIES(TutorialSmall PROPERTIES PASS_REGULAR_EXPRESSION "0.0001 is 0.01")

ADD_TEST(TutorialUsage Tutorial)
SET_TESTS_PROPERTIES(TutorialUsage PROPERTIES PASS_REGULAR_EXPRESSION "Usage: .*number")

INCLUDE(InstallRequiredSystemLibraries)
SET (CPACK_RESOUCE_FILE_LICENSE 
    ${CMAKE_CURRENT_SOURCE_DIR}/License.txt)
SET (CPACK_PACKAGE_VERSION_MAJOR "${Tutorial_VERSION_MAJOR}")
SET (CPACK_PACKAGE_VERSION_MINOR "${Tutorial_VERSION_MINOR}")
INCLUDE (CPack)
